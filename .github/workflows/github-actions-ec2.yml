name: Build and Push
on:
  push:
    branches: [main]
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: devopstask
          # IMAGE_TAG: $GITHUB_SHA
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA

      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOSTNAME: ${{ secrets.HOST_DNS }}
          USER_NAME: ${{ secrets.USERNAME }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: devopstask

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '

            #Now we have got the access of EC2 and we will start the deploy
            sudo su
            # sudo systemctl restart docker.socket docker.service
            # sudo chmod 666 /var/run/docker.sock
            # sudo setfacl --modify user::rw /var/run/docker.sock
            docker login --username AWS --password eyJwYXlsb2FkIjoieTloQjk4TkluYVZqemJLK2w4TVZNRi9mNTR5d2FVdGFRZTdIZ21vdERCQXJrallZZ3QyK1hSNTNyMEZ1MGRUVVdFdWpta3lFak5saTlkYjJiNmU1TFZaZGY4TzdCcWtkbXBYMXhaa2lpNHJCZ1BsSjUxK1c3Y25wUTdCQjN4YXBpUXA0TDJtYUZoTnlFT0JqWHl6QWxMNi9pQ1dyaTdtaUJlaDVOcGdKR0hSL1dxZkwrbWxmdFg5aWxJQ0JMbjF1VkhFY0Y1Q0VBKzBoSmhnNFBUS21zdTZBeWc0ZmtnUlZRTStaU29MT3hhcVVJeXRnYmE5dDlQTXZUbjFReEgwaHFpd3d2eHFxd1p0WU1FUTFDRWROYW5DR0ZjdHRmL2NjQm5VTCtFanZ0dHlOSC9xT0Z1V3NKUlZ0UzlpWkh0Rm1POHZ2Ym55L3orR29jUGVhaGlybWIvOFRsd2pxV1hQM2tDUG1QU0ZiNDhDV3luZ1BETXlLSWR3YVVzUGM2WnVqMzJUQ3hJMUZycEo2NC9QdDJZemxEdHBaa2xDemNsZ25JV1Z0eFFyNFlPY2xFTlNZRWdDMTlYRWlpS2VQY0JFTC9KdVNqV2hXR3UvcFJkT1k2anNnenJQRk9ud1NZbnJFYmpWSzNOMkJTWEZUcE5wa0VyMW1XOVFJUkR1N1lOeEFVaUhuUHJKSHh4M3VKbVc5cDBhMXhaaWZZSlR3d2dNQklUbWxmWnRrYzVlRThRVzlxZ0N5eVRITVJjTGtvdDd2VlU2ZGlyWHY1RVBGdFBJaTRmZDlETVVPZjVOam9naHZmVU1USXM2ZHhBRWpWOWZrMnZTYUl6eDdOYUdGd2xUNHFtU0FEYmtSSGRNZENKZXV6R3g4TEFwdGVZUXFJSG1IclkvQW90STdWSlpYNXQwVnlvNERUd2J1bDVqaFozWjRkM3NvZnVHS2JpZVRPbm0ra0FXeHdCK2pMNFZDcVZmOXZkWGo5TmJlMmhtZHdWTytKOWxrY01ORktlYmVjU3RuR1N0QkJxZ1lrOXo5VzZKcFBMNXBnMmY4cFZyZVJ0MUdVeHZzcXFManhQODZEU0VoUHc5SXVqTGxCRUZ5TnFzTFRJV2JyeDNGVUw1elh5dEpnem5IMzRpMHYwcWpuVUJjWFZZWlpDc2ZmMWRKSGlINy85ai96a014d1F3N2FscVNDUkhWZzFJbTFaRVBkVmYrK3dWcEllWnVrZEpob2UzOWRUWmhBNjkwaDhRV0dqTm14RFVHZ2dQVXVQQzh4SVdSUCszQ2hxRW1jMm84WHZzT2hodW1rWDJMT2xmRFpLNE9CYlhjeHgxYkNRbXFyS0FjRVRZZTdkeUp5alpVWUYwNVJDTHNGNEk2VkFhTXBnWFh3L1lKS3NFUFgxNktRS1BsNEt1SFNsaz0iLCJkYXRha2V5IjoiQVFJQkFIaUhXYVlUblJVV0NibnorN0x2TUcrQVB2VEh6SGxCVVE5RnFFbVYyNkJkd3dGWllFM3FsSEdUQ05ldG4wTmtMOXFNQUFBQWZqQjhCZ2txaGtpRzl3MEJCd2FnYnpCdEFnRUFNR2dHQ1NxR1NJYjNEUUVIQVRBZUJnbGdoa2dCWlFNRUFTNHdFUVFNWlJqS2V5clFvNUVWcjJhUkFnRVFnRHVtYjU4V041OUY0Mmh3UTE4L2YzenJFODNpY0NiR2lmYjE4TVBkRnVJMU9maVVja2VIWmlVWmtyN1JWTFJ5OTlJM3dMa050aytkVy8xU2xBPT0iLCJ2ZXJzaW9uIjoiMiIsInR5cGUiOiJEQVRBX0tFWSIsImV4cGlyYXRpb24iOjE2NjAyMjY3NDV9 729008907934.dkr.ecr.ap-south-1.amazonaws.com
            # docker kill $(docker ps -q)
            docker run -p 8001:5000 -d 729008907934.dkr.ecr.ap-south-1.amazonaws.com/devopstask
            '
